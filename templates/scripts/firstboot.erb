#!/bin/sh
LOGFILE='/root/firstboot.log'
exec >> $LOGFILE 2>&1

QUARTERMASTER=<%= @fqdn %>
HOSTNAME=`hostname -s`
release_name=`lsb_release -c | awk '{print $2}'`
release_number=`lsb_release -r | awk '{print $2}'| tr -d '.'`

echo "### RELEASE_NAME:" $release_name "RELEASE_NUMBER:" $release_number "###"

sleep 20

if [ "$HOSTNAME" = "debian" ] && [ "$release_number" -ge 90 ];
then
  ACTIVE_INTERFACE=`/sbin/route |grep default |awk '{ print $8 }'`
  NEWHOSTNAME=`/sbin/ifconfig | grep -3 $ACTIVE_INTERFACE | grep ether | tr -s " " | cut -d " " -f3 | /bin/sed -e "s/://g;"`
  echo $NEWHOSTNAME > /etc/hostname
  echo "### HOSTNAME:" $HOSTNAME "NEWHOSTNAME:" $NEWHOSTNAME "###"
fi
if [ "$HOSTNAME" = "ubuntu" ] && [ "$release_number" -ge 1710 ];
then
  ACTIVE_INTERFACE=`/sbin/route |grep default |awk '{ print $8 }'`
  NEWHOSTNAME=`/sbin/ifconfig | grep -3 $ACTIVE_INTERFACE | grep ether | tr -s " " | cut -d " " -f3 | /bin/sed -e "s/://g;"`
  echo $NEWHOSTNAME > /etc/hostname
  echo "### HOSTNAME:" $HOSTNAME "NEWHOSTNAME:" $NEWHOSTNAME "###"
fi

if [ "$HOSTNAME" = "debian" ] && [ "$release_number" -lt 90 ] || [ "$HOSTNAME" = "ubuntu" ] && [ "$release_number" -lt 1710 ];
#if [ "$HOSTNAME" = "ubuntu" -o "$HOSTNAME" = "debian" -o "$HOSTNAME" = "kali" ];
then
   #set hostname to mac address of eth0
  ACTIVE_INTERFACE=`route |grep default |awk '{ print $8 }'`
  NEWHOSTNAME=`/sbin/ifconfig | grep $ACTIVE_INTERFACE | tr -s " " | cut -d " " -f5 | /bin/sed -e "s/://g;"`
  echo "### HOSTNAME:" $HOSTNAME "NEWHOSTNAME:" $NEWHOSTNAME "###"
  echo $NEWHOSTNAME > /etc/hostname
else
  echo "### HOSTNAME:" $HOSTNAME "NEWHOSTNAME:" $NEWHOSTNAME "###"
fi

echo '*** Attempting to install the puppet5 release apt repository from apt.puppet.com first ***'
puppet_package='puppet-agent'; wget http://apt.puppet.com/puppet5-release-$release_name.deb; dpkg -i puppet5-release-$release_name.deb
if [ $? $test -eq 1 ]; then
   echo "*** Could not find puppet5-release for $release_name.  Trying puppetlabs-release-pc1 as alternative. ***"
   puppet_package='puppet-agent'; wget http://apt.puppet.com/puppetlabs-release-pc1-$release_name.deb; dpkg -i puppetlabs-release-pc1-$release_name.deb
   if [ $? $test -eq 1 ]; then
      echo "*** Could not find puppetlabs pc1 release for $release_name.  Trying puppetlabs-release alternative. ***"
      puppet_package='puppet'; wget http://apt.puppet.com/puppetlabs-release-$release_name.deb; dpkg -i puppetlabs-release-$release_name.deb
      if [ $? $test -eq 1 ]; then
         echo "Could not find puppetlabs-release for $release_name.  Trying puppetlabs-release-precise as alternative."
         puppet_package='puppet'; wget http://apt.puppet.com/puppetlabs-release-precise.deb; dpkg -i puppetlabs-release-precise.deb
      fi
   fi
fi

echo '### UPDATING AND INSTALLING NECESSARY PACKAGES ###'
echo '*** PUPPET_PACKAGE:' $puppet_package '***'
apt-get update -y && apt-get install -y ruby ruby-dev $puppet_package


echo "### INSTALLING R10K and Hierra-eyaml ###"
gem install r10k hiera-eyaml


# Set hostname of puppetmaster
# This is currently disabled as the puppetmaster is no longer on the quartermaster server
# echo "<%= @fqdn %> <%= @fqdn %> <%= @hostname %> puppet" >> /etc/hosts

#/sbin/ifconfig | grep "eth" | tr -s " " | cut -d " " -f5 | /usr/bin/perl -pi -e "s/://g;" > /etc/hostname
#
#/bin/sed -i -e "s/^START=no/START=YES/" /etc/default/puppet

if [ -f /etc/default/puppet ]
then
	/bin/sed -i -e "s/^START=no/START=yes/" /etc/default/puppet
fi

if [ -f /etc/puppet/puppet.conf ]
then
cat >> /etc/puppet/puppet.conf << EOF
[agent]
server=<%= @puppetmaster %>
EOF

fi

if [ -f /etc/puppetlabs/puppet/puppet.conf ]
then
cat >> /etc/puppetlabs/puppet/puppet.conf << EOF
[agent]
server=<%= @puppetmaster %>
EOF

fi
if [ -f /etc/init.d/hostname.sh ]
then
	/bin/sed -i -e "s/debian/$NEWHOSTNAME/g" /etc/hostname
	/bin/sed -i -e "s/debian/$NEWHOSTNAME/g" /etc/hosts
        /etc/init.d/hostname.sh start
else
	/bin/sed -i -e "s/ubuntu/$NEWHOSTNAME/g" /etc/hostname
	/bin/sed -i -e "s/ubuntu/$NEWHOSTNAME/g" /etc/hosts
	/etc/init.d/hostname start
fi

echo "### Install Secondboot script to /root ###"
wget http://<%= @fqdn %>/bin/secondboot -O /root/secondboot
chmod +x /root/secondboot

use_upstart=`ps -p 1 -o command | awk '{print $1}'|grep -c init`
use_systemd=`ps -p 1 -o command | awk '{print $1}'|grep -c systemd`

if [ $use_upstart -eq 0 ]
then
  echo "### Remove our firstboot service so that it will not run again"
  update-rc.d firstboot remove
  echo "### Remove all firstboot script files ###"
  rm /etc/init.d/firstboot /root/firstboot

  echo "#### ADDING SECONDBOOT TO UPSTART CONFIGURATION #####"
  cat > /etc/init.d/secondboot << EOF
### BEGIN INIT INFO
# Provides:        secondboot
# Required-Start:  $networking
# Required-Stop:   $networking
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: A script that runs once
# Description: A script that runs once
### END INIT INFO

cd /root ; /usr/bin/nohup sh -x /root/secondboot &

EOF

  chmod +x /etc/init.d/secondboot
  update-rc.d secondboot defaults
else
  echo "### No UPSTART Configuration needed ###"
fi

if [ $use_systemd -eq 0 ]
then
  echo "### Remove all firstboot script files ###"
  rm /etc/systemd/system/firstboot.service /root/firstboot
  echo "#### ADDING SECONDBOOT TO SYSTEMD CONFIGURATION #####"
  cat > /etc/systemd/system/secondboot.service << EOF
[Unit]
After=network.target

[Service]
ExecStart=/root/secondboot

[Install]
WantedBy=multi-user.target

EOF
  systemctl enable secondboot.service
else
  echo "### No SYSTEMD Configuration needed ###"
fi

echo "Finished Firstboot Script"
# Reboot into the new kernel
/sbin/reboot
